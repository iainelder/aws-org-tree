name: Run pre-commit checks

on:
  push:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:

      - name: Check out repository
        uses: actions/checkout@v3
        with:
          ref: "${{ github.ref }}"  # For version consistency check.

      - name: Set up Python
        id: set-up-python
        uses: actions/setup-python@v4
        with:
          python-version: 3.12

      - name: Install Poetry
        uses: snok/install-poetry@v1.3.3
        with:
          version: 1.5.1
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.set-up-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install Python dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: Install aws-org-tree
        run: poetry install --no-interaction

      - name: Run pre-commit checks
        run: poetry run pre-commit run --all-files --verbose

      - name: Build package distributions
        run: poetry build

      - name: Upload package distributions
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: dist/

      # I wanted to implement it as a pre-commit check but the tag is created
      # after the commit. Maybe it can be added as a pre-push script.
      - name: Check version consistency
        if: "github.ref_type == 'tag'"
        run: |
          diff \
          --unified \
          --color=always \
          --label pyproject.toml \
          --label "latest tag" \
          <(grep -oP '(?<=^version = ").*?(?=")' pyproject.toml) \
          <(git describe --abbrev=0)

  release:
    needs: build
    if: "github.ref_type == 'tag'"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: build
          path: dist/
      - uses: softprops/action-gh-release@v1
        with:
          files: dist/*
    permissions:
      contents: write

  publish-to-test:
    needs: release
    runs-on: ubuntu-latest
    environment:
      name: TestPyPI
    permissions:
      id-token: write
    steps:
      - name: Download package distributions
        uses: actions/download-artifact@v4
        with:
          name: build
          path: dist/

      - name: Publish package distributions to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          verbose: true

  publish-to-prod:
    needs: publish-to-test
    runs-on: ubuntu-latest
    environment:
      name: PyPI
    permissions:
      id-token: write
    steps:
      - name: Download package distributions
        uses: actions/download-artifact@v4
        with:
          name: build
          path: dist/

      - name: Publish package distributions to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          verbose: true
